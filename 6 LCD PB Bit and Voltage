// The purpose of this exercise is to display the bit value when the
// button is not pressed and the voltage when the button is pressed
// For the push button we will be using a pull up system

#include <LiquidCrystal.h> // include the LCD library

const int rs = 7, en = 8, d4 = 10, d5 = 11, d6 = 12, d7 = 13;
LiquidCrystal lcd(rs, en, d4, d5, d6, d7);
// initialize the library by associating any needed LCD interface pin
// with the arduino pin number it is connected to

void setup() {
  
  pinMode(2, INPUT); // pin 2 becomes an input
  lcd.begin(16, 2); // set up the LCD's number of columns and rows
  Serial.begin(9600); // begin serial communication
}

void loop() {

int bitvalue = analogRead (A0); // read the voltage in bit value

int voltage = (bitvalue/(1024/5));
// this calculation will translate the bit value into voltage

int PBval = digitalRead(2); // read the digital push button value

lcd.setCursor(0, 0); // set the starting point on the LCD

if (PBval == 1) // if the PB is not pressed (1), do {}
{
lcd.print("bv = "); // short for "bit value equals"
         
lcd.print(bitvalue); // will print the bit value

lcd.print(""); // removes the blank squares 
}

else // if the PB is pressed (0), do {}
{
lcd.print(" v = "); // short for "voltage equals"

lcd.print(voltage); // will print the voltage value
  
lcd.print("V        "); // voltage symbol and removes the blank squares
}

lcd.write((byte)0); // communication procedure for the LCD

  if (Serial.available()) // when characters arrive over the serial port...
  {
    delay(100); // wait 0.1 seconds for the entire message to arrive
    lcd.clear(); // clear the screen
    while (Serial.available() > 0) // read all the available characters
    { 
    lcd.write(Serial.read()); // display each character on the LCD
    }
  }
}
